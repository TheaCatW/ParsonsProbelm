{
  "name": "Parsons Problem-Printing specific elements",
  "description": "Construct a problem that print the third element in each line",
  "instructions": "No instructions given.",
  "initial": "try:\n   myfile=open(filename, \"r\")\n   linenum=1\n   for line in myfile:\n      words = line.split()\n      word=words[2]\n    s MockFile:\n\tdef __in  print(\"The third work in line\",linenum,\"is\",word)\n      linenum+=1\nexcept OSError:\n   print(\"Error reading the file.\")"
  "vartests": "[{ initcode : \"class OSError():\n\tdef __init__(self,text):\n\t\tpass\nfile_opened = 'False'\nfilename = 'text.txt'\nclasit__(self):\n\t\tglobal file_opened\n\t\tfile_opened = 'True'\n\t\tself.content = ['Jonh Alex 6 Sonia','Lily Roy Mike 7']\n\t\tself.counter = 0\n\tdef readline(self):\n\t\tif file_opened == 'False':\n\t\t\traise ValueError('I/O operation on closed file')\n\t\tif self.counter < len(self.content):\n\t\t\tline = self.content[self.counter] + '\\\n' \n\t\t\tself.counter = self.counter + 1\n\t\telse:\n\t\t\tline = ''\n\t\treturn line\n\tdef close(self):\n\t\tglobal file_opened\n\t\tfile_opened = 'False'\ndef open(open_file, mode):\n\tif open_file == 'text.txt':\n\t\treturn self.content\n\telse:\n\t\traise OSError('No such file or directory:' + str(open_file))\n\", code : \"\", message : \"Testing with filename set to 'text.txt'\", variables : { file_opened: 'False', __output : \"Some\n\nsample\n\ntext\n\n\" }  },{ initcode : \"class OSError():\n\tdef __init__(self,text):\n\t\tpass\nfilename = 'file_does_not_exist.txt'\nclass MockFile:\n\tdef __init__(self):\n\t\tself.content = ['Jonh Alex 6 Sonia','Lily Roy Mike 7']\n\t\tself.counter = 0\n\tdef readline(self):\n\t\tif self.counter < len(self.content):\n\t\t\tline = self.content[self.counter] + '\\\n' \n\t\t\tself.counter = self.counter + 1\n\t\telse:\n\t\t\tline = ''\n\t\treturn line\n\tdef close(self):\n\t\tpass\ndef open(open_file, mode):\n\tif open_file == 'text.txt':\n\t\treturn MockFile()\n\telse:\n\t\traise OSError('No such file or directory:' + str(open_file))\n\", code : \"\", message : \"Testing with filename set to 'file_does_not_exist.txt'\", variables : { __output : \"Error reading the file. The program execution ends.\n\" }  }] ",
  "type": "VARTEST"
}
